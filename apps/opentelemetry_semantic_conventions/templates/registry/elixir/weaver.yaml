params:
  excluded_namespaces:  ["aspnetcore", "cpython", "dotnet", "go", "ios", "jvm", "kestrel", "nodejs", "signalr", "v8js", "veightjs", "webengine"]
  excluded_attributes: []
  
templates:
  - pattern: semantic_attributes.ex.j2
    filter: >
      semconv_grouped_attributes({
        "exclude_root_namespace": $excluded_namespaces,
        "exclude_stability": ["experimental"] # experimental here is fine, weaver matches all non-stable things to it
      }) | map({
          root_namespace: .root_namespace,
          attributes: .attributes,
          excluded_attributes: $excluded_attributes,
          output: "lib/attributes/",
          stability: "stable"
      })
    application_mode: each
  - pattern: semantic_attributes.ex.j2
    filter: >
      semconv_grouped_attributes({
        "exclude_root_namespace": $excluded_namespaces
      }) | map({
          root_namespace: .root_namespace,
          attributes: .attributes,
          excluded_attributes: $excluded_attributes,
          output: "lib/incubating/attributes/",
          stability: "incubating"
      })
    application_mode: each

  - pattern: semantic_metrics.ex.j2
    filter: >
      semconv_grouped_metrics({
        "exclude_root_namespace": $excluded_namespaces,
        "exclude_stability": ["experimental"] # experimental here is fine, weaver matches all non-stable things to it
      }) | map({
          root_namespace: .root_namespace,
          metrics: .metrics,
          output: "lib/metrics/",
          stability: "stable"
      })
    application_mode: each
  - pattern: semantic_metrics.ex.j2
    filter: >
      semconv_grouped_metrics({
        "exclude_root_namespace": $excluded_namespaces
      }) | map({
          root_namespace: .root_namespace,
          metrics: .metrics,
          output: "lib/incubating/metrics/",
          stability: "incubating"
      })
    application_mode: each

text_maps:
  elixir_types:
    "int": "integer()"
    "int[]": "[integer()]"
    "double": "float()"
    "double[]": "[float()]"
    "boolean": "boolean()"
    "boolean[]": "[boolean()]"
    "string": "atom() | String.t()"
    "string[]": "[atom() | String.t()]"
    "template[int]": "integer()"
    "template[double]": "float()"
    "template[boolean]": "boolean()"
    "template[string]": "atom() | String.t()"
    "template[string[]]": "[atom() | String.t()]"
    "template[int[]]": "[integer()]"
    "template[double[]]": "[float()]"
    "template[boolean[]]": "[boolean()]"

acronyms: ["AZ", "GenAI", "CICD", "VCS", "CPU", "HW", "iOS", "HTTP", "API", "SDK", "CLI", "URL", "JSON", "XML", "HTML", "TLS", "RPC", "OS", "OCI", "GCP", "FAAS", "DNS", "DB", "AWS", "S3", "K8S" ]
